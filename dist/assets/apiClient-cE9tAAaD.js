import{s as c}from"./supabaseClient-Dqa0j5et.js";const d=["customers","leads","orders","followups","view_customers_with_latest_followup","view_leads_with_latest_followup"],q=async(t,r={})=>{const e=new URL(t,"http://localhost"),[m,i]=e.pathname.split("/");if(!d.includes(i))throw new Error("Unsupported path in Supabase request");const l=parseInt(e.searchParams.get("page")||"1"),a=parseInt(e.searchParams.get("pageSize")||"10"),o=e.searchParams.get("sortBy")||"created_at",n=e.searchParams.get("sortOrder")||"desc";let s=c.from(i).select("*",{count:"exact"}).order(o,{ascending:n==="asc"});const u=e.searchParams.get("filterField"),p=e.searchParams.get("filterValue");u&&p&&(s=s.ilike(u,`%${p}%`));const f=(l-1)*a,g=f+a-1;s=s.range(f,g);const{data:P,count:_,error:w}=await s;if(w)throw w;return{items:P,total:_}};function h(t){const r={};for(const e in t)r[e]=t[e]===""?null:t[e];return r}async function E(t,r="GET",e=null,m={}){const i=new URL(t,"http://localhost"),[l,a]=i.pathname.split("/");if(!d.includes(a))throw new Error("Unsupported path in Supabase request");if(r==="GET")return q(t,{});if(r==="POST"){if(e){const{data:o,error:n}=await c.from(a).insert([h(e)]);if(n)throw n;return o}throw new Error(`POST request missing body for path: ${t}`)}else if(r==="PATCH"){if(!e)throw new Error("PATCH request missing body");const o=i.pathname.split("/")[2];if(!o)throw new Error("PATCH request missing id in path");const{data:n,error:s}=await c.from(a).update(h(e)).eq("id",o);if(s)throw s;return n}else throw new Error(`HTTP method ${r} not supported`)}export{E as a};
